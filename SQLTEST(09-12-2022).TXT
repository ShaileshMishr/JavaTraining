use sqltest;
create table salesman(salesman_id int primary key, name varchar(20), city varchar(20), commission double);

INSERT INTO SALESMAN VALUES(5001,"JAMES HOOQ","NEW YORK",0.15);
INSERT INTO SALESMAN VALUES(5002,"NAIL KNITE","PARIS",0.13),(5005,"PIT ALEX","LONDON",0.11),
(5006,"MC LYON","PARIS",0.14),(5003,"LAUSON HEN",NULL,0.12),(5007,"PAUL ADAM","ROME",0.13);
SELECT * FROM SALESMAN;

CREATE TABLE CUSTOMER(CUSTOMER_ID INT PRIMARY KEY, CUSTOMER_NAME VARCHAR(20), CITY VARCHAR(20), GRADE INT,salesman_id int,
 FOREIGN KEY(salesman_id) REFERENCES salesman(salesman_id));

 INSERT INTO CUSTOMER VALUES(3002,"NICK RIMANDO","NEW YORK",100,5001),(3005,"GRAHAM ZUSI","CALIFORNIA",200,5002),
 (3001,"BRAD GUZAN","LONDON",NULL,NULL),(3004,"FABIAN JOHNS","PARIS",300,5006),(3007,"BRAD DAVIS","NEW YORK",200,5001),
 (3009,"GEOFF CAMERO","BERLIN",100,NULL),(3008,"JULIAN GREEN","LONDON",300,5002),(3003,"JOZY ALTIDOR","MONCOW",200,5007);
 select * from customer;

 CREATE TABLE ORDER1(ORDER_NO INT PRIMARY KEY, PURCH_AMT DOUBLE, ORDER_DATE DATE, CUSTOMER_ID INT, SALESMAN_ID INT,
 FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),FOREIGN KEY(SALESMAN_ID) REFERENCES SALESMAN(SALESMAN_ID));

 INSERT INTO ORDER1 VALUES(70001,150.5,'2016-10-05',3005,5002),(70009,270.65,'2016-09-10',3001,NULL),
 (70002,65.26,'2016-10-05',3002,5001),(70004,110.5,'2016-08-17',3009,NULL),(70007,948.5,'2016-09-10',3005,5002),
 (70005,2400.6,'2016-07-27',3007,5001),(70008,5760,'2016-09-10',3002,5001),(70010,1983.43,'2016-10-10',3004,5006),
 (70003,2480.4,'2016-10-10',3009,NULL),(70012,250.45,'2016-06-27',3008,5002),(70011,75.29,'2016-08-17',3003,5007);

 SELECT * FROM ORDER1;


 # ALL QUERY

 # Display name and commission of all the salesmen.
 SELECT NAME, COMMISSION FROM SALESMAN ;

 # Retrieve salesman id of all salesmen from orders table without any repeats.
 SELECT SALESMAN_ID FROM ORDER1 GROUP BY SALESMAN_ID;

 # Display names and city of salesman, who belongs to the city of Paris.
 SELECT NAME, CITY FROM SALESMAN WHERE CITY="PARIS";

 # Display all the information for those customers with a grade of 200.
 SELECT * FROM CUSTOMER WHERE GRADE=200;

 # Display the order number, order date and the purchase amount for order(s) which will be delivered by the salesman with ID 5001.
 SELECT ORDER_NO,ORDER_DATE,PURCH_AMT FROM ORDER1 WHERE SALESMAN_ID=5001;

 # Display all the customers, who are either belongs to the city New York or not had a grade above 100.
 SELECT * FROM CUSTOMER WHERE CITY='NEW YORK' OR NOT GRADE>100;

 #Find those salesmen with all information who gets the commission within a range of 0.12 and 0.14.
 SELECT * FROM SALESMAN WHERE COMMISSION BETWEEN 0.12 AND 0.14;

 # Find all those customers with all information whose names are ending with the letter 'n'.
 SELECT * FROM CUSTOMER WHERE CUSTOMER_NAME LIKE '%N';

 #  Find those salesmen with all information whose name containing the 1st character is 'N' and the 4th character is 'l' and rests may be any character.
 SELECT * FROM SALESMAN WHERE NAME LIKE 'N__I%';

 # Find that customer with all information who does not get any grade except NULL
 SELECT * FROM CUSTOMER WHERE NOT GRADE IS NULL;

 # Find the total purchase amount of all orders.
 SELECT SUM(PURCH_AMT) FROM ORDER1;

# Find the third highest grade for each of the cities of the customers.
SELECT city,MAX(grade) from customer where grade < (select MAX(grade) from customer where grade < (select MAX(grade) from customer )) group by city;

 #Find the second lowest purchase amount ordered by each customer with their ID and lowest purchase amount.
 select MIN(purch_amt),customer_id from order1 where purch_amt not in(select MIN(purch_amt) from order1) group by customer_id;


 #  Find the highest purchase amount ordered by the each customer on a particular date with their ID, order date and highest purchase amount.
 select customer_id, MAX(purch_amt) from order1 group by customer_id, order_date;

 # Find the highest purchase amount with their customer ID and order date, for only those customers who have the highest purchase amount in a day is more than 2000.
 select customer_id, order_date, max(purch_amt) from order1 group by  customer_id, order_date having min(purch_amt)<2000;






